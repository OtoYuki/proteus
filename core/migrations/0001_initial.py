# Generated by Django 4.2.19 on 2025-03-03 12:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "user_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("is_active", models.BooleanField(default=True)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
                "db_table": "users",
            },
        ),
        migrations.CreateModel(
            name="Prediction",
            fields=[
                (
                    "prediction_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("pdb_file_path", models.CharField(max_length=255)),
                (
                    "pae_file_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("plddt_score", models.FloatField(blank=True, null=True)),
                ("prediction_date", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(max_length=20)),
                ("confidence_score", models.FloatField(blank=True, null=True)),
                ("model_version", models.CharField(max_length=50)),
                ("prediction_metadata", models.JSONField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Prediction",
                "verbose_name_plural": "Predictions",
                "db_table": "predictions",
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                ("role_id", models.AutoField(primary_key=True, serialize=False)),
                ("role_name", models.CharField(max_length=20, unique=True)),
            ],
            options={
                "verbose_name": "Role",
                "verbose_name_plural": "Roles",
                "db_table": "role",
            },
        ),
        migrations.CreateModel(
            name="SystemMetric",
            fields=[
                (
                    "metric_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("cpu_usage", models.FloatField()),
                ("memory_usage", models.FloatField()),
                ("disk_usage", models.FloatField()),
                ("active_jobs", models.IntegerField()),
                ("performance_metrics", models.JSONField(blank=True, null=True)),
                ("status", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "System Metric",
                "verbose_name_plural": "System Metrics",
                "db_table": "system_metrics",
            },
        ),
        migrations.CreateModel(
            name="ValidationMetric",
            fields=[
                (
                    "metric_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("rmsd", models.FloatField(blank=True, null=True)),
                ("rg", models.FloatField(blank=True, null=True)),
                ("energy", models.FloatField(blank=True, null=True)),
                (
                    "trajectory_path",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("validation_date", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(max_length=20)),
                ("simulation_parameters", models.JSONField(blank=True, null=True)),
                ("stability_score", models.FloatField(blank=True, null=True)),
                ("validation_notes", models.TextField(blank=True, null=True)),
                (
                    "prediction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="validation_metrics",
                        to="core.prediction",
                    ),
                ),
            ],
            options={
                "verbose_name": "Validation Metric",
                "verbose_name_plural": "Validation Metrics",
                "db_table": "validation_metrics",
            },
        ),
        migrations.CreateModel(
            name="ProteinSequence",
            fields=[
                (
                    "sequence_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("sequence_name", models.CharField(max_length=100)),
                ("sequence_fasta", models.TextField()),
                ("upload_date", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, null=True)),
                ("sequence_length", models.IntegerField()),
                ("organism", models.CharField(blank=True, max_length=100, null=True)),
                ("source", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="protein_sequences",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Protein Sequence",
                "verbose_name_plural": "Protein Sequences",
                "db_table": "protein_sequences",
            },
        ),
        migrations.AddField(
            model_name="prediction",
            name="sequence",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="predictions",
                to="core.proteinsequence",
            ),
        ),
        migrations.CreateModel(
            name="MLRanking",
            fields=[
                (
                    "ranking_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("stability_score", models.FloatField(blank=True, null=True)),
                ("solubility_score", models.FloatField(blank=True, null=True)),
                ("binding_efficiency_score", models.FloatField(blank=True, null=True)),
                ("ranking_date", models.DateTimeField(auto_now_add=True)),
                ("overall_score", models.FloatField(blank=True, null=True)),
                ("feature_importance", models.JSONField(blank=True, null=True)),
                ("model_version", models.CharField(max_length=50)),
                ("ranking_notes", models.TextField(blank=True, null=True)),
                (
                    "prediction",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ml_rankings",
                        to="core.prediction",
                    ),
                ),
            ],
            options={
                "verbose_name": "ML Ranking",
                "verbose_name_plural": "ML Rankings",
                "db_table": "ml_ranking",
            },
        ),
        migrations.CreateModel(
            name="Log",
            fields=[
                (
                    "log_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("action", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("details", models.TextField(blank=True, null=True)),
                ("ip_address", models.CharField(blank=True, max_length=45, null=True)),
                ("session_id", models.CharField(blank=True, max_length=100, null=True)),
                ("status", models.CharField(max_length=20)),
                ("component", models.CharField(max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Log",
                "verbose_name_plural": "Logs",
                "db_table": "logs",
            },
        ),
        migrations.CreateModel(
            name="JobQueue",
            fields=[
                (
                    "job_id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("job_type", models.CharField(max_length=50)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("completed_at", models.DateTimeField(blank=True, null=True)),
                ("status", models.CharField(max_length=20)),
                ("job_parameters", models.JSONField(blank=True, null=True)),
                ("priority", models.IntegerField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="jobs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Job",
                "verbose_name_plural": "Jobs",
                "db_table": "job_queue",
            },
        ),
        migrations.AddField(
            model_name="user",
            name="role",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="users",
                to="core.role",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
    ]
